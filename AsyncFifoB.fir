;buildInfoPackage: chisel3, version: 3.2-20191106-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit AsyncFifoB : 
  module AsyncFifoB : 
    output io : {flip wr_clk : Clock, flip wr_nrst : AsyncReset, flip wr_en : UInt<1>, flip wdata : UInt<8>, flip rd_clk : Clock, flip rd_nrst : AsyncReset, flip rd_en : UInt<1>, rdata : UInt<8>, empty : UInt<1>, full : UInt<1>}
    
    smem regs : UInt<8>[8] @[AsyncFifoB.scala 29:25]
    wire wr_ptr_bin_next : UInt<4> @[AsyncFifoB.scala 30:29]
    wire wr_ptr_gray_next : UInt<4> @[AsyncFifoB.scala 31:30]
    wire rd_ptr_bin_next : UInt<4> @[AsyncFifoB.scala 32:29]
    wire rd_ptr_gray_next : UInt<4> @[AsyncFifoB.scala 33:30]
    reg wr_ptr_bin : UInt<4>, io.wr_clk with : (reset => (io.wr_nrst, UInt<4>("h00"))) @[AsyncFifoB.scala 37:29]
    node _T = eq(io.full, UInt<1>("h00")) @[AsyncFifoB.scala 38:37]
    node _T_1 = and(io.wr_en, _T) @[AsyncFifoB.scala 38:34]
    node _T_2 = add(_T_1, wr_ptr_bin) @[AsyncFifoB.scala 38:56]
    node _T_3 = tail(_T_2, 1) @[AsyncFifoB.scala 38:56]
    wr_ptr_bin_next <= _T_3 @[AsyncFifoB.scala 38:21]
    wr_ptr_bin <= wr_ptr_bin_next @[AsyncFifoB.scala 39:16]
    node _T_4 = dshr(wr_ptr_bin_next, UInt<1>("h01")) @[AsyncFifoB.scala 83:7]
    node _T_5 = xor(_T_4, wr_ptr_bin_next) @[AsyncFifoB.scala 83:14]
    reg dly : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 77:22]
    dly <= _T_5 @[AsyncFifoB.scala 78:9]
    wr_ptr_gray_next <= dly @[AsyncFifoB.scala 42:22]
    node _T_6 = eq(io.full, UInt<1>("h00")) @[AsyncFifoB.scala 45:22]
    node _T_7 = and(io.wr_en, _T_6) @[AsyncFifoB.scala 45:19]
    when _T_7 : @[AsyncFifoB.scala 45:31]
      node _T_8 = bits(wr_ptr_bin, 2, 0) @[AsyncFifoB.scala 46:28]
      write mport _T_9 = regs[_T_8], io.wr_clk
      _T_9 <= io.wdata
      skip @[AsyncFifoB.scala 45:31]
    reg stage_d : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 69:27]
    reg stage_dd : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 70:27]
    stage_d <= rd_ptr_gray_next @[AsyncFifoB.scala 71:13]
    stage_dd <= stage_d @[AsyncFifoB.scala 72:14]
    node _T_10 = dshr(wr_ptr_bin_next, UInt<1>("h01")) @[AsyncFifoB.scala 83:7]
    node _T_11 = xor(_T_10, wr_ptr_bin_next) @[AsyncFifoB.scala 83:14]
    reg full : UInt<1>, io.wr_clk with : (reset => (io.wr_nrst, UInt<1>("h00"))) @[AsyncFifoB.scala 92:23]
    node _T_12 = bits(stage_dd, 1, 0) @[AsyncFifoB.scala 93:20]
    node _T_13 = bits(_T_11, 1, 0) @[AsyncFifoB.scala 93:40]
    node _T_14 = eq(_T_12, _T_13) @[AsyncFifoB.scala 93:31]
    node _T_15 = bits(stage_dd, 3, 2) @[AsyncFifoB.scala 93:63]
    node _T_16 = bits(_T_11, 3, 2) @[AsyncFifoB.scala 93:92]
    node _T_17 = not(_T_16) @[AsyncFifoB.scala 93:84]
    node _T_18 = eq(_T_15, _T_17) @[AsyncFifoB.scala 93:79]
    node _T_19 = and(_T_14, _T_18) @[AsyncFifoB.scala 93:53]
    full <= _T_19 @[AsyncFifoB.scala 93:10]
    node _T_20 = bits(full, 0, 0) @[AsyncFifoB.scala 94:16]
    io.full <= _T_20 @[AsyncFifoB.scala 49:13]
    reg rd_ptr_bin : UInt<4>, io.rd_clk with : (reset => (io.rd_nrst, UInt<4>("h00"))) @[AsyncFifoB.scala 54:29]
    node _T_21 = eq(io.empty, UInt<1>("h00")) @[AsyncFifoB.scala 55:37]
    node _T_22 = and(io.rd_en, _T_21) @[AsyncFifoB.scala 55:34]
    node _T_23 = add(_T_22, rd_ptr_bin) @[AsyncFifoB.scala 55:57]
    node _T_24 = tail(_T_23, 1) @[AsyncFifoB.scala 55:57]
    rd_ptr_bin_next <= _T_24 @[AsyncFifoB.scala 55:21]
    rd_ptr_bin <= rd_ptr_bin_next @[AsyncFifoB.scala 56:16]
    node _T_25 = dshr(rd_ptr_bin_next, UInt<1>("h01")) @[AsyncFifoB.scala 83:7]
    node _T_26 = xor(_T_25, rd_ptr_bin_next) @[AsyncFifoB.scala 83:14]
    reg dly_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 77:22]
    dly_1 <= _T_26 @[AsyncFifoB.scala 78:9]
    rd_ptr_gray_next <= dly_1 @[AsyncFifoB.scala 59:22]
    node _T_27 = bits(rd_ptr_bin, 2, 0) @[AsyncFifoB.scala 62:37]
    node _T_28 = eq(io.empty, UInt<1>("h00")) @[AsyncFifoB.scala 62:61]
    node _T_29 = and(io.rd_en, _T_28) @[AsyncFifoB.scala 62:58]
    wire _T_30 : UInt @[AsyncFifoB.scala 62:26]
    _T_30 is invalid @[AsyncFifoB.scala 62:26]
    when _T_29 : @[AsyncFifoB.scala 62:26]
      _T_30 <= _T_27 @[AsyncFifoB.scala 62:26]
      node _T_31 = or(_T_30, UInt<3>("h00")) @[AsyncFifoB.scala 62:26]
      node _T_32 = bits(_T_31, 2, 0) @[AsyncFifoB.scala 62:26]
      read mport _T_33 = regs[_T_32], io.rd_clk @[AsyncFifoB.scala 62:26]
      skip @[AsyncFifoB.scala 62:26]
    io.rdata <= _T_33 @[AsyncFifoB.scala 62:14]
    reg stage_d_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 69:27]
    reg stage_dd_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifoB.scala 70:27]
    stage_d_1 <= wr_ptr_gray_next @[AsyncFifoB.scala 71:13]
    stage_dd_1 <= stage_d_1 @[AsyncFifoB.scala 72:14]
    node _T_34 = dshr(rd_ptr_bin_next, UInt<1>("h01")) @[AsyncFifoB.scala 83:7]
    node _T_35 = xor(_T_34, rd_ptr_bin_next) @[AsyncFifoB.scala 83:14]
    reg empty : UInt<1>, io.rd_clk with : (reset => (io.rd_nrst, UInt<1>("h00"))) @[AsyncFifoB.scala 98:24]
    node _T_36 = eq(stage_dd_1, _T_35) @[AsyncFifoB.scala 99:21]
    empty <= _T_36 @[AsyncFifoB.scala 99:11]
    node _T_37 = bits(empty, 0, 0) @[AsyncFifoB.scala 100:17]
    io.empty <= _T_37 @[AsyncFifoB.scala 64:14]
    
