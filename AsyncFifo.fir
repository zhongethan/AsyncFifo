;buildInfoPackage: chisel3, version: 3.2-20191106-SNAPSHOT, scalaVersion: 2.12.10, sbtVersion: 1.3.2
circuit AsyncFifo : 
  module AsyncFifo : 
    output io : {flip wr_clk : Clock, flip wr_nrst : AsyncReset, flip wr_en : UInt<1>, flip wdata : UInt<8>, flip rd_clk : Clock, flip rd_nrst : AsyncReset, flip rd_en : UInt<1>, rdata : UInt<8>, empty : UInt<1>, full : UInt<1>}
    
    wire wr_ptr_bin_next : UInt<4> @[AsyncFifo.scala 33:29]
    wire wr_ptr_gray_next : UInt<4> @[AsyncFifo.scala 34:30]
    wire wr_addr : UInt<3>
    wr_addr <= UInt<3>("h00")
    wire rd_ptr_bin_next : UInt<4> @[AsyncFifo.scala 36:29]
    wire rd_ptr_gray_next : UInt<4> @[AsyncFifo.scala 37:30]
    wire rd_addr : UInt<3>
    rd_addr <= UInt<3>("h00")
    reg regs : UInt<8>[8], io.wr_clk @[AsyncFifo.scala 48:19]
    reg wr_ptr_bin : UInt<4>, io.wr_clk with : (reset => (io.wr_nrst, UInt<4>("h00"))) @[AsyncFifo.scala 51:29]
    node _T = eq(io.full, UInt<1>("h00")) @[AsyncFifo.scala 52:37]
    node _T_1 = and(io.wr_en, _T) @[AsyncFifo.scala 52:34]
    node _T_2 = add(_T_1, wr_ptr_bin) @[AsyncFifo.scala 52:56]
    node _T_3 = tail(_T_2, 1) @[AsyncFifo.scala 52:56]
    wr_ptr_bin_next <= _T_3 @[AsyncFifo.scala 52:21]
    wr_ptr_bin <= wr_ptr_bin_next @[AsyncFifo.scala 53:16]
    node _T_4 = dshr(wr_ptr_bin_next, UInt<1>("h01")) @[AsyncFifo.scala 110:7]
    node _T_5 = xor(_T_4, wr_ptr_bin_next) @[AsyncFifo.scala 110:14]
    reg dly : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 104:22]
    dly <= _T_5 @[AsyncFifo.scala 105:9]
    wr_ptr_gray_next <= dly @[AsyncFifo.scala 55:22]
    node _T_6 = bits(wr_ptr_bin, 2, 0) @[AsyncFifo.scala 58:26]
    wr_addr <= _T_6 @[AsyncFifo.scala 58:13]
    node _T_7 = eq(io.full, UInt<1>("h00")) @[AsyncFifo.scala 59:22]
    node _T_8 = and(io.wr_en, _T_7) @[AsyncFifo.scala 59:19]
    when _T_8 : @[AsyncFifo.scala 59:31]
      regs[wr_addr] <= io.wdata @[AsyncFifo.scala 61:21]
      skip @[AsyncFifo.scala 59:31]
    io.rdata <= regs[rd_addr] @[AsyncFifo.scala 65:14]
    reg stage_d : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 96:27]
    reg stage_dd : UInt<8>, io.wr_clk with : (reset => (io.wr_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 97:27]
    stage_d <= rd_ptr_gray_next @[AsyncFifo.scala 98:13]
    stage_dd <= stage_d @[AsyncFifo.scala 99:14]
    node _T_9 = dshr(wr_ptr_bin_next, UInt<1>("h01")) @[AsyncFifo.scala 110:7]
    node _T_10 = xor(_T_9, wr_ptr_bin_next) @[AsyncFifo.scala 110:14]
    reg full : UInt<1>, io.wr_clk with : (reset => (io.wr_nrst, UInt<1>("h00"))) @[AsyncFifo.scala 120:23]
    node _T_11 = bits(stage_dd, 1, 0) @[AsyncFifo.scala 121:20]
    node _T_12 = bits(_T_10, 1, 0) @[AsyncFifo.scala 121:45]
    node _T_13 = eq(_T_11, _T_12) @[AsyncFifo.scala 121:36]
    node _T_14 = bits(stage_dd, 3, 2) @[AsyncFifo.scala 121:73]
    node _T_15 = bits(_T_10, 3, 2) @[AsyncFifo.scala 121:112]
    node _T_16 = not(_T_15) @[AsyncFifo.scala 121:104]
    node _T_17 = eq(_T_14, _T_16) @[AsyncFifo.scala 121:99]
    node _T_18 = and(_T_13, _T_17) @[AsyncFifo.scala 121:63]
    full <= _T_18 @[AsyncFifo.scala 121:10]
    node _T_19 = bits(full, 0, 0) @[AsyncFifo.scala 122:16]
    io.full <= _T_19 @[AsyncFifo.scala 68:13]
    reg rd_ptr_bin : UInt<4>, io.rd_clk with : (reset => (io.rd_nrst, UInt<4>("h00"))) @[AsyncFifo.scala 80:29]
    node _T_20 = eq(io.empty, UInt<1>("h00")) @[AsyncFifo.scala 81:37]
    node _T_21 = and(io.rd_en, _T_20) @[AsyncFifo.scala 81:34]
    node _T_22 = add(_T_21, rd_ptr_bin) @[AsyncFifo.scala 81:57]
    node _T_23 = tail(_T_22, 1) @[AsyncFifo.scala 81:57]
    rd_ptr_bin_next <= _T_23 @[AsyncFifo.scala 81:21]
    rd_ptr_bin <= rd_ptr_bin_next @[AsyncFifo.scala 82:16]
    node _T_24 = dshr(rd_ptr_bin_next, UInt<1>("h01")) @[AsyncFifo.scala 110:7]
    node _T_25 = xor(_T_24, rd_ptr_bin_next) @[AsyncFifo.scala 110:14]
    reg dly_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 104:22]
    dly_1 <= _T_25 @[AsyncFifo.scala 105:9]
    rd_ptr_gray_next <= dly_1 @[AsyncFifo.scala 84:22]
    node _T_26 = bits(rd_ptr_bin, 2, 0) @[AsyncFifo.scala 87:26]
    rd_addr <= _T_26 @[AsyncFifo.scala 87:13]
    reg stage_d_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 96:27]
    reg stage_dd_1 : UInt<8>, io.rd_clk with : (reset => (io.rd_nrst, UInt<8>("h00"))) @[AsyncFifo.scala 97:27]
    stage_d_1 <= wr_ptr_gray_next @[AsyncFifo.scala 98:13]
    stage_dd_1 <= stage_d_1 @[AsyncFifo.scala 99:14]
    node _T_27 = dshr(rd_ptr_bin_next, UInt<1>("h01")) @[AsyncFifo.scala 110:7]
    node _T_28 = xor(_T_27, rd_ptr_bin_next) @[AsyncFifo.scala 110:14]
    reg empty : UInt<1>, io.rd_clk with : (reset => (io.rd_nrst, UInt<1>("h01"))) @[AsyncFifo.scala 130:24]
    node _T_29 = eq(stage_dd_1, _T_28) @[AsyncFifo.scala 131:21]
    empty <= _T_29 @[AsyncFifo.scala 131:11]
    node _T_30 = bits(empty, 0, 0) @[AsyncFifo.scala 132:17]
    io.empty <= _T_30 @[AsyncFifo.scala 91:14]
    
